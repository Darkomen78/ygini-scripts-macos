<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>_metadata</key>
	<dict>
		<key>created_by</key>
		<string>ygi</string>
		<key>creation_date</key>
		<date>2017-08-04T16:32:16Z</date>
		<key>munki_version</key>
		<string>3.0.3.3352</string>
		<key>os_version</key>
		<string>10.12.6</string>
	</dict>
	<key>autoremove</key>
	<true/>
	<key>catalogs</key>
	<array>
		<string>testing</string>
	</array>
	<key>category</key>
	<string>Self-Service</string>
	<key>developer</key>
	<string>Abelionni</string>
	<key>display_name</key>
	<string>Enable some users to be temporary admins</string>
	<key>installcheck_script</key>
	<string>#!/bin/bash

## Check if we are requested to add the temporary group as member of the local admin group
## And if we aren't, check if the temporary group need to be removed from the local admin group
##
## This payload would be perfect to run in a custom munki check every 30 mins

# Update this variable to fit your needs
TEMPORARY_ADMIN_GROUP="CORP\Agents"
FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED="/var/db/com.abelionni.scripts.temporaryadmin"

## Do not change after this line

# Get the temporary group GUID
TEMPORARY_ADMIN_GROUP_GUID=$(dscl /Search read "/Groups/${TEMPORARY_ADMIN_GROUP}" GeneratedUID | awk '{print $2}')

# Check if the temporary group is member of the local admin group

IS_MEMBER_OF_LOCAL_ADMIN_GROUP=$(dscl /Local/Default read /Groups/admin NestedGroups 2&gt; /dev/null | grep "${TEMPORARY_ADMIN_GROUP_GUID}" | wc -l | bc)

# Check if the temporary group must or must not be member of the local admins
MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP=0
if [ -f "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}" ] 
then
	MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP=1
fi

# Fix current state
if [ ${MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 1 ] &amp;&amp; [ ${IS_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 0 ]
then
	# We need to run to add the temporary group as member of the local admin group
	exit 0
elif [ ${MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 0 ] &amp;&amp; [ ${IS_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 1 ]
then
	# We need to run to remove the temporary group from the local admin group
	exit 0
fi

# We don't need to do anything
exit 1
</string>
	<key>installer_type</key>
	<string>nopkg</string>
	<key>minimum_os_version</key>
	<string>10.4.0</string>
	<key>name</key>
	<string>TemporaryAdmins</string>
	<key>postinstall_script</key>
	<string>#!/bin/bash

## Check if we are requested to add the temporary group as member of the local admin group
## And if we aren't, check if the temporary group need to be removed from the local admin group
##
## This payload would be perfect to run in a custom munki check every 30 mins

# Update this variable to fit your needs
TEMPORARY_ADMIN_GROUP="CORP\Agents"
FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED="/var/db/com.abelionni.scripts.temporaryadmin"

## Do not change after this line

# Get the temporary group GUID
TEMPORARY_ADMIN_GROUP_GUID=$(dscl /Search read "/Groups/${TEMPORARY_ADMIN_GROUP}" GeneratedUID | awk '{print $2}')

# Check if the temporary group is member of the local admin group

IS_MEMBER_OF_LOCAL_ADMIN_GROUP=$(dscl /Local/Default read /Groups/admin NestedGroups 2&gt; /dev/null | grep "${TEMPORARY_ADMIN_GROUP_GUID}" | wc -l | bc)

# Check if the temporary group must or must not be member of the local admins
MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP=0
if [ -f "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}" ] 
then
	MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP=1
fi

# Fix current state
if [ ${MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 1 ] &amp;&amp; [ ${IS_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 0 ]
then
	# Add the temporary group as member of the local admin group
	dseditgroup -o edit -a "${TEMPORARY_ADMIN_GROUP}" -t group admin
elif [ ${MUST_BE_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 0 ] &amp;&amp; [ ${IS_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 1 ]
then
	# Remove the temporary group from the local admin group
	dseditgroup -o edit -d "${TEMPORARY_ADMIN_GROUP}" -t group admin
fi

# If the flag file was here, we need to remove it. So at next run, this script will clear everything
if [ -f "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}" ] 
then
	rm "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}"
fi

exit 0
</string>
	<key>uninstall_method</key>
	<string>uninstall_script</string>
	<key>uninstall_script</key>
	<string>#!/bin/bash

## Check if we are requested to add the temporary group as member of the local admin group
## And if we aren't, check if the temporary group need to be removed from the local admin group
##
## This payload would be perfect to run in a custom munki check every 30 mins

# Update this variable to fit your needs
TEMPORARY_ADMIN_GROUP="CORP\Agents"
FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED="/var/db/com.abelionni.scripts.temporaryadmin"

## Do not change after this line

# Uninstall is requested, so we clean everything
rm "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}"

# Get the temporary group GUID
TEMPORARY_ADMIN_GROUP_GUID=$(dscl /Search read "/Groups/${TEMPORARY_ADMIN_GROUP}" GeneratedUID | awk '{print $2}')

# Check if the temporary group is member of the local admin group

IS_MEMBER_OF_LOCAL_ADMIN_GROUP=$(dscl /Local/Default read /Groups/admin NestedGroups 2&gt; /dev/null | grep "${TEMPORARY_ADMIN_GROUP_GUID}" | wc -l | bc)


# Fix current state
if [ ${IS_MEMBER_OF_LOCAL_ADMIN_GROUP} -eq 1 ]
then
	# Remove the temporary group from the local admin group
	dseditgroup -o edit -d "${TEMPORARY_ADMIN_GROUP}" -t group admin
fi

# If the flag file was here, we need to remove it.
if [ -f "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}" ]
then
	rm "${FILE_FLAG_WHEN_TEMPORARY_ADMIN_GROUP_IS_NEEDED}"
fi

exit 0
</string>
	<key>version</key>
	<string>1.0.0.0.0 (Please edit me!)</string>
</dict>
</plist>

